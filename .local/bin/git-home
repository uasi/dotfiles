#!/usr/bin/env perl

use v5.26;
use warnings;
use feature 'signatures';
no warnings 'experimental::signatures';

use Getopt::Long;

sub get_url ($remote) {
    my $url = `git config --local remote.${remote}.url`;
    return if $?;
    chomp $url;
    $url;
}

sub make_repo_url ($url) {
    $_ = $url;
    if (m|^https?://[^@]+?/|) {
        $url =~ s/\.git$//;
        return $url;
    }
    if (m|^(https://)(?:[^@]+?@)?([^/:]+?)(?::[^/]+?)?(.*?)(?:\.git)?$|) {
        return "$1$2$3";
    }
    if (m|^git@([^/:]+)?:([^/]+?)(.*?)(?:\.git)?$|) {
        return "https://$1/$2$3";
    }
    if (m|^ssh://git\@github\.com/(.*?)(?:\.git)?$|) {
        return "https://github.com/$1";
    }
    undef;
}

sub get_path_info ($url) {
    $_ = $url;
    if (m|//[^/]*\bgithub\.com/|) {
        return {issues => 'issues', pr => 'pulls'};
    }
    if (m|//[^/]*\bbitbucket\.org/|) {
        return {issues => 'issues', pr => 'pull-requests'};
    }
    if (m|//[^/]*\bgitlab\.com/|) {
        return {issues => 'issues', pr => 'merge_requests'};
    }
    +{};
}

sub main {
    GetOptions(\my %opts, qw(
        issues
        pr
    ));

    my $remote = shift(@ARGV) || 'origin';

    my $url = get_url($remote)
        or die "fatal: remote.${remote}.url is not set\n";

    my $repo_url = make_repo_url($url)
        or die "fatal: unknown scheme: ${url}\n";

    my $type = ($opts{pr} ? 'pr' :
                $opts{issues} ? 'issues' :
                '');

    if ($type and my $path = get_path_info($repo_url)->{$type}) {
        $repo_url .= '/' . $path;
    }

    exec 'open', $repo_url;
}

main;
